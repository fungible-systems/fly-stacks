# need to create a postgres instance first
# https://fly.io/docs/reference/postgres/


app = "stacks-blockchain" # app name
# kill_signal = "SIGTERM" # kill signal to send. default is SIGINT
kill_timeout = 60 #  how long to wait for shutdown

[build]
    dockerfile = "stacks-blockchain.Dockerfile"
[build.args]
    STACKS_BLOCKCHAIN_VERSION = "2.05.0.1.0"
    STACKS_BLOCKCHAIN_API_VERSION = "2.1.1"

[deploy]
    strategy = "rolling"

[env]
    STACKS_NETWORK="mainnet"
    STACKS_CORE_EVENT_PORT= "3700"
    STACKS_CORE_EVENT_HOST = "0.0.0.0"
    STACKS_BLOCKCHAIN_API_PORT = "3999"
    STACKS_BLOCKCHAIN_API_HOST = "0.0.0.0"
    STACKS_BLOCKCHAIN_API_DB = "pg"
    STACKS_CORE_RPC_HOST = "localhost"
    STACKS_CORE_RPC_PORT = "20443"
    NODE_ENV = "production"
    GIT_TAG = "master"
    V2_POX_MIN_AMOUNT_USTX = "90000000260"
    # STACKS_API_ENABLE_FT_METADATA = "1"
    # STACKS_API_ENABLE_NFT_METADATA = "1"
    # STACKS_API_TOKEN_METADATA_ERROR_MODE = "warning"
    # STACKS_ADDRESS_CACHE_SIZE = "10000"
    # BNS_IMPORT_DIR = "/bns-data"
    # STACKS_EXPORT_EVENTS_FILE = "/root/stacks-blockchain/stacks-node-events.tsv" 

[[services]]
    internal_port = 80
    protocol = "tcp"

    [[services.ports]]
        handlers = ["http"]
        port = "80"
    [[services.http_checks]]
        interval = 10000
        grace_period = "5s"
        method = "get"
        path = "/status"
        protocol = "http"
        timeout = 2000
        tls_skip_verify = false
        [services.http_checks.headers]


[[services]]
    internal_port = 20443
    protocol = "tcp"
    [[services.ports]]
        handlers = ["http"]
        port = "20443"
    [[services.tcp_checks]]
        interval = 30000
        timeout = 10000
        grace_period = "5m"

[[services]]
    internal_port = 20444
    protocol = "tcp"
    [[services.tcp_checks]]
        interval = 30000
        timeout = 10000
        grace_period = "5m"

[mounts]
source="stacks-blockchain-data"
destination="/root/stacks-blockchain/data"


# https://fly.io/docs/app-guides/multiple-processes/
# https://fly.io/docs/getting-started/multi-region-databases/